// <auto-generated />
using System;
using HStats.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HStats.Migrations
{
    [DbContext(typeof(HStatsContext))]
    [Migration("20190529133535_Games")]
    partial class Games
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HStats.Models.Arena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArenaCountry");

                    b.Property<string>("ArenaCounty");

                    b.Property<string>("ArenaName");

                    b.Property<string>("ArenaStreetAddress");

                    b.Property<string>("ArenaZipCode");

                    b.HasKey("Id");

                    b.ToTable("Arena");
                });

            modelBuilder.Entity("HStats.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClubName");

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<string>("Email");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Club");
                });

            modelBuilder.Entity("HStats.Models.CoachStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SCStatus");

                    b.HasKey("Id");

                    b.ToTable("CoachStatus");
                });

            modelBuilder.Entity("HStats.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArenaId");

                    b.Property<int?>("AwayTeamScore");

                    b.Property<int?>("HomeTeamScore");

                    b.Property<DateTime>("MatchDateTime");

                    b.Property<int?>("MatchNumber");

                    b.Property<int?>("PersonId");

                    b.Property<int?>("PersonId1");

                    b.Property<int?>("PersonId2");

                    b.Property<int?>("PersonId3");

                    b.Property<int?>("PersonId4");

                    b.Property<int?>("SeriesId");

                    b.Property<int?>("TSMNumber");

                    b.Property<int?>("TeamId");

                    b.Property<int?>("TeamId1");

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("ArenaId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonId1");

                    b.HasIndex("PersonId2");

                    b.HasIndex("PersonId3");

                    b.HasIndex("PersonId4");

                    b.HasIndex("SeriesId");

                    b.HasIndex("TeamId");

                    b.HasIndex("TeamId1");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("HStats.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClubId");

                    b.Property<int?>("ClubId1");

                    b.Property<int?>("CoachStatusId");

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PhoneNumber1");

                    b.Property<int?>("PlayerStatusId");

                    b.Property<int?>("RefereeStatusId");

                    b.Property<string>("Ssn");

                    b.Property<int?>("StaffStatusId");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("ClubId1");

                    b.HasIndex("CoachStatusId");

                    b.HasIndex("PlayerStatusId");

                    b.HasIndex("RefereeStatusId");

                    b.HasIndex("StaffStatusId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("HStats.Models.PlayerStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PStatus");

                    b.HasKey("Id");

                    b.ToTable("PlayerStatus");
                });

            modelBuilder.Entity("HStats.Models.RefereeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefereeCategoryName");

                    b.HasKey("Id");

                    b.ToTable("RefereeCategory");
                });

            modelBuilder.Entity("HStats.Models.RefereeCategoryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefereeCategoryTypeName");

                    b.HasKey("Id");

                    b.ToTable("RefereeCategoryType");
                });

            modelBuilder.Entity("HStats.Models.RefereeDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefereeDistrictName");

                    b.HasKey("Id");

                    b.ToTable("RefereeDistrict");
                });

            modelBuilder.Entity("HStats.Models.RefereeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RStatus");

                    b.HasKey("Id");

                    b.ToTable("RefereeStatus");
                });

            modelBuilder.Entity("HStats.Models.RefereeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RefereeTypeName");

                    b.HasKey("Id");

                    b.ToTable("RefereeType");
                });

            modelBuilder.Entity("HStats.Models.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("SeriesName");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("HStats.Models.StaffStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SStatus");

                    b.HasKey("Id");

                    b.ToTable("StaffStatus");
                });

            modelBuilder.Entity("HStats.Models.TSMRef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClubId");

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber1");

                    b.Property<string>("PhoneNumber2");

                    b.Property<string>("RefNumber");

                    b.Property<int?>("RefereeCategoryId");

                    b.Property<int?>("RefereeCategoryTypeId");

                    b.Property<int?>("RefereeDistrictId");

                    b.Property<int?>("RefereeTypeId");

                    b.Property<string>("Ssn");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("RefereeCategoryId");

                    b.HasIndex("RefereeCategoryTypeId");

                    b.HasIndex("RefereeDistrictId");

                    b.HasIndex("RefereeTypeId");

                    b.ToTable("TSMRef");
                });

            modelBuilder.Entity("HStats.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeamName");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("HStats.Models.Game", b =>
                {
                    b.HasOne("HStats.Models.Arena", "Arena")
                        .WithMany()
                        .HasForeignKey("ArenaId");

                    b.HasOne("HStats.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("HStats.Models.Person", "Person1")
                        .WithMany()
                        .HasForeignKey("PersonId1");

                    b.HasOne("HStats.Models.Person", "Person2")
                        .WithMany()
                        .HasForeignKey("PersonId2");

                    b.HasOne("HStats.Models.Person", "Person3")
                        .WithMany()
                        .HasForeignKey("PersonId3");

                    b.HasOne("HStats.Models.Person", "Person4")
                        .WithMany()
                        .HasForeignKey("PersonId4");

                    b.HasOne("HStats.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.HasOne("HStats.Models.Team", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("TeamId");

                    b.HasOne("HStats.Models.Team", "AwayTeam")
                        .WithMany()
                        .HasForeignKey("TeamId1");
                });

            modelBuilder.Entity("HStats.Models.Person", b =>
                {
                    b.HasOne("HStats.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId");

                    b.HasOne("HStats.Models.Club", "Club1")
                        .WithMany()
                        .HasForeignKey("ClubId1");

                    b.HasOne("HStats.Models.CoachStatus", "CoachStatus")
                        .WithMany()
                        .HasForeignKey("CoachStatusId");

                    b.HasOne("HStats.Models.PlayerStatus", "PlayerStatus")
                        .WithMany()
                        .HasForeignKey("PlayerStatusId");

                    b.HasOne("HStats.Models.RefereeStatus", "RefereeStatus")
                        .WithMany()
                        .HasForeignKey("RefereeStatusId");

                    b.HasOne("HStats.Models.StaffStatus", "StaffStatus")
                        .WithMany()
                        .HasForeignKey("StaffStatusId");
                });

            modelBuilder.Entity("HStats.Models.TSMRef", b =>
                {
                    b.HasOne("HStats.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId");

                    b.HasOne("HStats.Models.RefereeCategory", "RefereeCategory")
                        .WithMany()
                        .HasForeignKey("RefereeCategoryId");

                    b.HasOne("HStats.Models.RefereeCategoryType", "RefereeCategoryType")
                        .WithMany()
                        .HasForeignKey("RefereeCategoryTypeId");

                    b.HasOne("HStats.Models.RefereeDistrict", "RefereeDistrict")
                        .WithMany()
                        .HasForeignKey("RefereeDistrictId");

                    b.HasOne("HStats.Models.RefereeType", "RefereeType")
                        .WithMany()
                        .HasForeignKey("RefereeTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
