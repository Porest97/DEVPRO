// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PROSupport.Models;

namespace PROSupport.Migrations
{
    [DbContext(typeof(PROSupportContext))]
    [Migration("20190607161322_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PROSupport.Models.BusinessCentre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CentreName");

                    b.Property<string>("CentreNotes");

                    b.Property<int?>("CentreNumber");

                    b.Property<int?>("CompanyId");

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<int?>("NumberOfFloors");

                    b.Property<int?>("PersonId");

                    b.Property<int?>("PersonId1");

                    b.Property<string>("StreetAddress");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonId1");

                    b.ToTable("BusinessCentre");
                });

            modelBuilder.Entity("PROSupport.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<string>("PhoneNumber1");

                    b.Property<string>("PhoneNumber2");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("PROSupport.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusinessCentreId");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("PersonId");

                    b.Property<int?>("SupportTicketId");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("BusinessCentreId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SupportTicketId");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("PROSupport.Models.DworkinWiFiSurveyResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("A");

                    b.Property<int?>("AccessPoints");

                    b.Property<string>("AccessPointsBrandModel");

                    b.Property<string>("B");

                    b.Property<int?>("BusinessCentreId");

                    b.Property<string>("C");

                    b.Property<string>("D");

                    b.Property<string>("E");

                    b.Property<string>("F");

                    b.Property<string>("G");

                    b.Property<int?>("PersonId");

                    b.Property<DateTime?>("ReportDate");

                    b.Property<decimal?>("TimeOnSite");

                    b.Property<string>("Version");

                    b.HasKey("Id");

                    b.HasIndex("BusinessCentreId");

                    b.HasIndex("PersonId");

                    b.ToTable("DworkinWiFiSurveyResult");
                });

            modelBuilder.Entity("PROSupport.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId");

                    b.Property<string>("CompanyRole");

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber1");

                    b.Property<string>("PhoneNumber2");

                    b.Property<string>("Ssn");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("PROSupport.Models.SupportTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusinessCentreId");

                    b.Property<string>("FaultDescription");

                    b.Property<string>("FaultReport");

                    b.Property<int?>("PersonId");

                    b.Property<int?>("PersonId1");

                    b.Property<string>("TicketLog");

                    b.Property<DateTime?>("TimeStampClosed");

                    b.Property<DateTime>("TimeStampCreated");

                    b.Property<DateTime?>("TimeStampResolved");

                    b.HasKey("Id");

                    b.HasIndex("BusinessCentreId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonId1");

                    b.ToTable("SupportTicket");
                });

            modelBuilder.Entity("PROSupport.Models.BusinessCentre", b =>
                {
                    b.HasOne("PROSupport.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("PROSupport.Models.Person", "CentreContact")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("PROSupport.Models.Person", "CentreManager")
                        .WithMany()
                        .HasForeignKey("PersonId1");
                });

            modelBuilder.Entity("PROSupport.Models.Document", b =>
                {
                    b.HasOne("PROSupport.Models.BusinessCentre", null)
                        .WithMany("BCDocuments")
                        .HasForeignKey("BusinessCentreId");

                    b.HasOne("PROSupport.Models.Person", "Owner")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("PROSupport.Models.SupportTicket", null)
                        .WithMany("TicketDocuments")
                        .HasForeignKey("SupportTicketId");
                });

            modelBuilder.Entity("PROSupport.Models.DworkinWiFiSurveyResult", b =>
                {
                    b.HasOne("PROSupport.Models.BusinessCentre", "BusinessCentre")
                        .WithMany()
                        .HasForeignKey("BusinessCentreId");

                    b.HasOne("PROSupport.Models.Person", "AssignedFE")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("PROSupport.Models.Person", b =>
                {
                    b.HasOne("PROSupport.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("PROSupport.Models.SupportTicket", b =>
                {
                    b.HasOne("PROSupport.Models.BusinessCentre", "BusinessCentre")
                        .WithMany()
                        .HasForeignKey("BusinessCentreId");

                    b.HasOne("PROSupport.Models.Person", "OrderedBy")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("PROSupport.Models.Person", "AssignedFE")
                        .WithMany()
                        .HasForeignKey("PersonId1");
                });
#pragma warning restore 612, 618
        }
    }
}
